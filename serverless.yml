# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: back-swapi
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: '*'

package:
  patterns:
    - '!.dynamodv/**'
    - '!offline/**'
    - '!test/**'
    
functions:
  translatePeople:
    handler: src/translatePeople.translatePeople
    events:
      - http:
          path: people/translate
          method: get

  createPeople:
    handler: src/createPeople.createPeople
    events:
      - http:
          path: people
          method: post    
    environment:
      DYNAMODB_TABLE: ${self:custom.dynamodbTableName}
    
  getPeopleById:
    handler: src/getPeopleById.getPeopleById
    events:
      - http:
          path: people/{id}
          method: get
    environment:
      DYNAMODB_TABLE: ${self:custom.dynamodbTableName}

  getPeople:
    handler: src/getPeople.getPeople
    events:
      - http:
          path: people
          method: get
    environment:
      DYNAMODB_TABLE: ${self:custom.dynamodbTableName}

  updatePeople:
    handler: src/updatePeople.updatePeople
    events:
      - http:
          path: people/{id}
          method: put
    environment:
      DYNAMODB_TABLE: ${self:custom.dynamodbTableName}

  deletePeople:
    handler: src/deletePeople.deletePeople
    events:
      - http:
          path: people/{id}
          method: delete
    environment:
      DYNAMODB_TABLE: ${self:custom.dynamodbTableName}

resources:
  Resources:
    people:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: people
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
custom:
  # dynamodb:
  # # If you only want to use DynamoDB Local in some stages, declare them here
  #   stages:
  #     - dev
  #   start:
  #     #docker: true
  #     port: 8000
  #     inMemory: true
  #     migrate: true
  #     seed: true
  #     convertEmptyValues: true
  #     #dir: /Users/iiapcomunicaciones/Downloads/dynamodb_local_latest
  #   migration:
  #     dir: offline/migrations
  #   # Uncomment only if you already have a DynamoDB running locally
  #   # noStart: true
  dynamodbTableName: people